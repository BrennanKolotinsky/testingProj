{"version":3,"sources":["logo.svg","Components/WeatherUI/index.jsx","Components/Authentication/index.jsx","App.js","reportWebVitals.js","index.js"],"names":["axios","require","WeatherUI","props","state","location","console","log","this","method","url","crossDomain","data","then","response","setState","displayingData","weather","description","lat","coord","lon","e","target","value","className","event","updateCurrentLocation","onClick","findWeather","style","display","React","Component","Authentication","username","password","key","checkAuth","alert","auth","forceUpdate","type","placeholder","onKeyPress","handleKeyPress","onChange","updateUserName","updatePassword","authenticated","numTimes","App","useState","setValue","ConfirmAuth","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a6eb7282.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { Component } from \"react\";\nconst axios = require('axios'); // use to send API requests!\n\nclass WeatherUI extends React.Component {\n\n\tconstructor(props) {\n    \tsuper(props);\n\n    \tthis.state = {\n    \t\tlocation: \"\"\n    \t};\n    }\n\n\tfindWeather () {\n\t\tconsole.log(this.state.location);\n\t\taxios(\n\t\t\t{\n\t\t\t  method: \"POST\", \n\t\t\t  url: process.env.REACT_APP_LOCAL === 'true' ? \"http://localhost:8080/weather\" : \"http://weatherbackend-env.eba-xftcnfcx.us-east-1.elasticbeanstalk.com/weather\",\n\t\t\t  crossDomain: true, \n\t\t\t  data: {\n\t\t\t  \tlocation: this.state.location\n\t\t\t  }\n\t\t\t}).then((response) => {\n\t\t\t\tthis.setState({\n\t\t\t\t\tdisplayingData: true,\n\t\t\t\t\tweather: response.data.data.weather[0].description,\n\t\t\t\t\tlat: response.data.data.coord.lat,\n\t\t\t\t\tlon: response.data.data.coord.lon,\n\t\t\t\t})\n\t\t\t}\n\t\t);\n\t}\n\n\tupdateCurrentLocation(e) {\n\t\tthis.state.location = e.target.value;\n\t}\n\n\trender() {\n\t\treturn(\n\t\t\t<div>\n\t\t\t\t<h2 className=\"marginAddedTop\">\n\t\t\t\t\tGet a cities current weather!\n\t\t\t\t</h2>\n\t\t\t\t<input className=\"block\" className=\"inputs\" type=\"text\" placeholder=\"Vancouver\" onChange= { (event) => this.updateCurrentLocation(event) }></input>\n\t\t\t\t<button className=\"inputs confirmBtn\" onClick={ () => this.findWeather() }>Get Weather!</button>\n\n\t\t\t\t<div className=\"block\" style={this.state.displayingData == true ? {} : { display : 'none' } }>\n\t\t\t\t\t<h3>Data loaded for: {this.state.location == '' ? \"Vancouver\" : this.state.location}!</h3>\n\t\t\t\t\t<h4>Weather: {this.state.weather}</h4>\n\t\t\t\t\t<h4>Latitude: {this.state.lat}, Longitude: {this.state.lon}</h4>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default WeatherUI;","import React, { Component } from \"react\";\nconst axios = require('axios');\n\nclass Authentication extends React.Component {\n\n\tconstructor(props) {\n    \tsuper(props);\n\n    \tthis.state = {\n    \t\tusername: '',\n    \t\tpassword: '',\n    \t};\n    }\n\n    updateUserName(e) {\n\t\tthis.state.username = e.target.value;\n\t}\n\n\tupdatePassword(e) {\n\t\tthis.state.password = e.target.value;\n\t}\n\n\thandleKeyPress(e) {\n\t  if(e.key === 'Enter'){\n\t    this.checkAuth();\n\t  }\n\t}\n\n\tcheckAuth() {\n\t\tif (this.state.username === '' || this.state.password === '')\n\t\t\talert(\"Incomplete login info!\");\n\n\t\taxios(\n\t\t\t{\n\t\t\t  method: \"POST\", \n\t\t\t  url: process.env.REACT_APP_LOCAL === 'true' ? \"http://localhost:8080/authenticate\" : \"http://weatherbackend-env.eba-xftcnfcx.us-east-1.elasticbeanstalk.com/authenticate\",\n\t\t\t  crossDomain: true, \n\t\t\t  data: {\n\t\t\t  \tusername: this.state.username,\n\t\t\t  \tpassword: this.state.password,\n\t\t\t  }\n\t\t\t}).then((response) => {\n\n\t\t\t\tif (response.data.auth === 1) {\n\t\t\t\t\talert(\"Authenticated!\");\n\t\t\t\t\tthis.props.forceUpdate(1);\n\t\t\t\t} else {\n\t\t\t\t\talert(\"Invalid username or password!\");\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t}\n\n    render() {\n\n\t\treturn (\n\t\t\t<div className=\"marginAddedTop\">\n\t\t\t\t<input className=\"block inputs\" type=\"text\" placeholder=\"username\" onKeyPress={ (event) => this.handleKeyPress(event) } onChange= { (event) => this.updateUserName(event) }></input>\n\t\t\t\t<input className=\"block marginAddedLeft inputs\" type=\"password\" placeholder=\"password\" onKeyPress={ (event) => this.handleKeyPress(event) } onChange= { (event) => this.updatePassword(event) }></input>\n\t\t\t\t<button className=\"inputs confirmBtn\" onClick={ () => this.checkAuth() }>Login</button>\n\t\t\t</div>\n\t\t);\n\t}\n\n}\n\nexport default Authentication;","import logo from './logo.svg';\nimport './App.css';\nimport React, { useState } from 'react';\nimport Weather from \"./Components/WeatherUI/index.jsx\";\nimport Authentication from \"./Components/Authentication/index.jsx\";\nimport Module from 'module'\nconst axios = require('axios'); // use to send API requests!\nlet authenticated = false;\nlet numTimes = 0;\n\nconst ConfirmAuth = () => {\n  \n  // the hook renders twice automatically (frustrating!)\n  if (++numTimes > 2) {\n    authenticated = true;\n  }\n\n  // this just forces an update\n  const [value, setValue] = useState(0);\n  return () => setValue(value => ++value);\n}\n\nfunction App() {\n  let forceUpdate = ConfirmAuth(); // hook\n  return (\n\n    <div className=\"App\">\n      <div style={authenticated == false ? {} : { display : 'none' } }>\n        <Authentication forceUpdate={ forceUpdate } authenticated={ authenticated }  />\n      </div>\n      <div style={authenticated == true ? {} : { display : 'none' } }>\n        <Weather />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}